@model PagedResult<FuelData>
@{ViewData["Title"] = "Log data";}
<header>
    <nav class="navbar fixed-top navbar-expand-lg navbar-light scrolling-navbar">
        <a class="navbar-brand" asp-controller="FuelDatas" asp-action="Index"><img style="height:39.32px" src="~/assets/dg.png" /></a>
         <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="About">About</a>
                </li>
                <li class="nav-item active">
                    <a class="nav-link text-dark" asp-action="Create">Add new drivelog</a>
                </li>
            </ul>
        </div>
    </nav>
</header>
<form asp-controller="FuelDatas" asp-action="Index" style="padding-top:50px; padding-bottom:10px">
    <div class="form-row" style="margin-top:50px;">
        <div class="col">
            <input type="text" class="form-control" placeholder="Filter driving destination from starting position or endpoint" name="SearchString" style="border-radius: 0 !important;">
        </div>
        <div class="col-md-auto">
            <input type="submit" value="Filter" class="form-control" style="border-radius: 0 !important;" />
        </div>
    </div>
</form>
<table class="table table-striped table-dark" style="margin-top:10px">
    <thead>
        <tr>
            <th>
                Trip name
            </th>
            <th>
                Drive date
            </th>
            <th>
                Trip Start
            </th>
            <th>
                Trip End
            </th>
            <th>
                Drive length
            </th>
        </tr>
    </thead>
    <tbody>
        @{var Total = 0; var Fuel = 0;}
        @foreach (var item in Model.Results)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.TripName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DriveDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TripStart)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TripEnd)
                </td>
                <td>
                    @{
                        var TripLength = item.TripEnd - item.TripStart;
                        Total = Total + TripLength;
                        Fuel = Total / 10;
                    }
                    @TripLength
                </td>
                <td>
                    <button type="button" class="btn btn-warning"><strong><a asp-action="Edit" style="color:black !important" asp-route-id="@item.Id">Edit</a>    </strong></button>
                    <button type="button" class="btn btn-info">   <strong><a asp-action="Details" style="color:azure !important" asp-route-id="@item.Id">Details</a> </strong></button>
                    <button type="button" class="btn btn-danger"> <strong><a asp-action="Delete" style="color:azure !important" asp-route-id="@item.Id">Delete</a> </strong> </button>
                </td>
            </tr>
        }
        <tr>
            <td>Total distance is @Total kilometers</td>
            <td>@Fuel litres fuel consumed</td>
            <td></td>
            <td></td>
            <td></td>
            <td><button type="button" class="btn btn-success"><strong><a asp-action="Create" style="color:azure !important"> New drivelog</a></strong></button></td>
        </tr>
    </tbody>
</table>
<div>
    <vc:pager result="@Model"></vc:pager>
</div>
<canvas id="myChart" style="height:400px !important"></canvas>
<script type="text/javascript">
    let tripData = [];
    let tripNames = [];
   @foreach (var item in Model.Results)
   {
       var Start = item.TripStart;
       var End = item.TripEnd;
       var Distance = End - Start;
       <text>
       tripData.push(@Distance);
       tripNames.push('@item.TripName');
      </text>
   }
   const ctx = document.getElementById('myChart').getContext('2d');
   let myChart = new Chart(ctx, {
    type: 'horizontalBar',
    data: {
        labels: tripNames,
        datasets: [{
            label: 'Distance comparison',
            data: tripData,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        scales: {
            xAxes: [{
                stacked: true
            }],
            yAxes: [{
                stacked: true
            }]
        }
    }
});
</script>